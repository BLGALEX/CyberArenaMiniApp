{"version":3,"sources":["img/persik.png","StrManager.js","Constants.js","tabs/Tournament.js","tabs/Tavern.js","tabs/Profile.js","panels/Home.js","App.js","panels/Persik.js","index.js"],"names":["module","exports","StrManager","lang","ru","Map","this","StrEnum","APP_NAME","TOURNAMENT_TAB","TAVERN_TAB","PROFILE_TAB","localeWords","stringEnum","array","has","s","get","k","res","i","length","push","join","Constants","HomeTabs","TOURNAMENT","TAVERN","PROFILE","Tournament","Tavern","Profile","Home","id","go","fetchedUser","useState","activeTab","setActiveTab","onClick","selected","showTab","App","platform","activePanel","setActivePanel","setUser","size","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","setLocale","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d5eebb22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","class StrManager {\r\n    static StrEnum = {\r\n        APP_NAME : 1,\r\n        TOURNAMENT_TAB: 2,\r\n        TAVERN_TAB: 3,\r\n        PROFILE_TAB: 4,\r\n    }\r\n\r\n    static localeWords\r\n\r\n    static setLocale(lang) {\r\n        let ru = new Map([\r\n            [this.StrEnum.APP_NAME, \"КиберАрена\"],\r\n            [this.StrEnum.TOURNAMENT_TAB, \"Турниры\"],\r\n            [this.StrEnum.TAVERN_TAB, \"Таверна\"],\r\n            [this.StrEnum.PROFILE_TAB, \"Профиль\"],\r\n        ])\r\n\r\n        //let en = {}\r\n\r\n        if (lang === 'default')\r\n            lang = 'ru'\r\n\r\n        switch (lang) {\r\n            case 'ru':\r\n                this.localeWords = ru;\r\n                break;\r\n            case 'en':\r\n                break;\r\n            case 'ge':\r\n                break;\r\n            case 'fr':\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    static get(stringEnum, array) {\r\n        if (this.localeWords.has(stringEnum) === false) {\r\n            return \"NOT FOUND: \" + stringEnum;\r\n        }\r\n\r\n        let s = this.localeWords.get(stringEnum)\r\n        if (!array) {\r\n            return s;\r\n        }\r\n\r\n        let k = 0\r\n        let res = []\r\n        for (let i = 0; i < s.length; i++) {\r\n            if (s[i] === '\\0') {\r\n                res.push(array[k++])\r\n            } else {\r\n                res.push(s[i])\r\n            }\r\n        }\r\n\r\n        return res.join('')\r\n    }\r\n}\r\n\r\nexport default StrManager","class Constants {\r\n    static HomeTabs = {\r\n        TOURNAMENT : 1,\r\n        TAVERN : 2,\r\n        PROFILE : 3,\r\n    }\r\n}\r\n\r\nexport default Constants","import React from 'react'\r\nimport {Group} from \"@vkontakte/vkui\";\r\n\r\nconst Tournament = () => {\r\n    return <Group>Tournament 1</Group>\r\n}\r\n\r\nexport default Tournament","import React from 'react'\r\nimport {Group} from \"@vkontakte/vkui\";\r\n\r\nconst Tavern = () => {\r\n    return <Group>Tavern</Group>\r\n}\r\n\r\nexport default Tavern","import React from 'react'\r\nimport {Group} from \"@vkontakte/vkui\";\r\n\r\nconst Profile = () => {\r\n    return <Group>Profile</Group>\r\n}\r\n\r\nexport default Profile","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport PanelHeaderButton from \"@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton\";\nimport {IOS, platform, Tabs, TabsItem} from \"@vkontakte/vkui\";\nimport StrManager from \"../StrManager\";\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Constants from \"../Constants\";\nimport Tournament from \"../tabs/Tournament\";\nimport Tavern from \"../tabs/Tavern\";\nimport Profile from \"../tabs/Profile\";\n\n\n\nconst Home = ({ id, go, fetchedUser }) => {\n\tconst [activeTab, setActiveTab] = useState(Constants.HomeTabs.TOURNAMENT)\n\n\tconst showTab = () => {\n\t\tswitch (activeTab) {\n\t\t\tcase Constants.HomeTabs.TOURNAMENT:\n\t\t\t\treturn <Tournament/>\n\t\t\tcase Constants.HomeTabs.TAVERN:\n\t\t\t\treturn <Tavern/>\n\t\t\tcase Constants.HomeTabs.PROFILE:\n\t\t\t\treturn <Profile/>\n\t\t}\n\t\treturn null\n\t}\n\treturn (<Panel id={id}>\n\t\t<PanelHeader>\n\t\t\t{StrManager.get(StrManager.StrEnum.APP_NAME)}\n\t\t</PanelHeader>\n\t\t<Tabs>\n\t\t\t<TabsItem onClick={() => setActiveTab(Constants.HomeTabs.TOURNAMENT)}\n\t\t\t\t\t  selected={activeTab === Constants.HomeTabs.TOURNAMENT}>\n\t\t\t\t{StrManager.get(StrManager.StrEnum.TOURNAMENT_TAB)}\n\t\t\t</TabsItem>\n\t\t\t<TabsItem onClick={() => setActiveTab(Constants.HomeTabs.TAVERN)}\n\t\t\t\t\t  selected={activeTab === Constants.HomeTabs.TAVERN}>\n\t\t\t\t{StrManager.get(StrManager.StrEnum.TAVERN_TAB)}\n\t\t\t</TabsItem>\n\t\t\t<TabsItem onClick={() => setActiveTab(Constants.HomeTabs.PROFILE)}\n\t\t\t\t\t  selected={activeTab === Constants.HomeTabs.PROFILE}>\n\t\t\t\t{StrManager.get(StrManager.StrEnum.PROFILE_TAB)}\n\t\t\t</TabsItem>\n\t\t</Tabs>\n\t\t{showTab()}\n\t</Panel>)\n};\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\t//\"deploy\": \"vk-miniapps-deploy\" в scripts в package.json\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\t// async function setLocale() {\n\t\t// \tlet xhr = new XMLHttpRequest();\n\t\t// \txhr.open('GET', `https://api.vk.com/method/users.get?user_ids=${fetchedUser.id}&fields=lang&access_token=${Token.token}&v=5.126`, false);\n\t\t// \txhr.send();\n\t\t//\n\t\t// \tlet locale = \"default\"\n\t\t// \tif (xhr.status != 200) {\n\t\t// \t\tconsole.log( xhr.status + ': ' + xhr.statusText ); // пример вывода: 404: Not Found\n\t\t// \t} else {\n\t\t// \t\tlocale = xhr.response.lang;\n\t\t// \t\tconsole.log(locale);\n\t\t// \t}\n\t\t// \tStrManager.setLocale(locale);\n\t\t// }\n\n\t\tfetchData();\n\t\t//setLocale();1\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\nimport StrManager from \"./StrManager\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nStrManager.setLocale(\"default\")\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}